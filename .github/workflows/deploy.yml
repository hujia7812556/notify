name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 支持手动触发

env:
  APP_NAME: notify
  GO_VERSION: '1.21'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: |
        mkdir -p bin
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/${{ env.APP_NAME }}
        chmod +x bin/${{ env.APP_NAME }}

    - name: Generate config
      run: |
        mkdir -p etc
        cat > etc/config.yaml << EOF
        server:
          port: ${{ secrets.SERVER_PORT }}
          mode: "release"
          read_timeout: 5s
          write_timeout: 10s

        dispatcher:
          buffer_size: 50
          worker_pool_size: 2

        wechat:
          sender_type: "wxpusher"
          wxpusher:
            app_token: "${{ secrets.WXPUSHER_APP_TOKEN }}"
            topic_ids:
              - "${{ secrets.WXPUSHER_TOPIC_ID }}"
            qps: 2

        log:
          level: "info"
          format: "json"
          output: "${{ secrets.SERVER_TARGET }}/logs/notify.log"
          debug:
            output: "stdout"
          release:
            output: "${{ secrets.SERVER_TARGET }}/logs/notify.log"

        healthcheck:
          enabled: true
          check_time: "08:00"
          timeout: 10s
        EOF

    - name: Deploy files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "bin/${{ env.APP_NAME }},etc/config.yaml,deploy/notify.service,deploy/notify.logrotate"
        target: "${{ secrets.SERVER_TARGET }}"
        strip_components: 1

    - name: Setup service and logrotate
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # 停止服务
          sudo systemctl stop notify || true
          
          # 创建必要的目录
          sudo mkdir -p /usr/local/bin /etc/notify ${{ secrets.SERVER_TARGET }}/logs
          
          # 移动文件到正确位置
          sudo mv ${{ secrets.SERVER_TARGET }}/${{ env.APP_NAME }} /usr/local/bin/
          sudo mv ${{ secrets.SERVER_TARGET }}/config.yaml /etc/notify/
          sudo mv ${{ secrets.SERVER_TARGET }}/notify.service /etc/systemd/system/
          sudo mv ${{ secrets.SERVER_TARGET }}/notify.logrotate /etc/logrotate.d/notify
          
          # 替换 logrotate 配置中的变量
          sudo sed -i "s|\$SERVER_TARGET|${{ secrets.SERVER_TARGET }}|g" /etc/logrotate.d/notify
          
          # 设置权限
          sudo chown -R notify:notify /etc/notify ${{ secrets.SERVER_TARGET }}/logs
          sudo chmod 644 /etc/logrotate.d/notify
          sudo chmod 755 /usr/local/bin/${{ env.APP_NAME }}
          
          # 重新加载并启动服务
          sudo systemctl daemon-reload
          sudo systemctl enable notify
          sudo systemctl restart notify
          
          # 测试 logrotate 配置
          sudo logrotate -d /etc/logrotate.d/notify