name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 支持手动触发

env:
  APP_NAME: notify
  GO_VERSION: '1.23'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: |
        mkdir -p bin
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o bin/${{ env.APP_NAME }}
        chmod +x bin/${{ env.APP_NAME }}

    - name: Generate config
      run: |
        mkdir -p etc
        cat > etc/config.yaml << EOF
        server:
          port: ${{ secrets.SERVER_PORT }}
          mode: "release"
          read_timeout: 5s
          write_timeout: 10s
          token: "${{ secrets.API_TOKEN }}"

        dispatcher:
          buffer_size: 50
          worker_pool_size: 2

        wechat:
          sender_type: "wxpusher"
          wxpusher:
            app_token: "${{ secrets.WXPUSHER_APP_TOKEN }}"
            topic_ids:
              - ${{ secrets.WXPUSHER_TOPIC_ID }}
            qps: 2
            api_url: "https://wxpusher.zjiecode.com/api/send/message"

        log:
          level: "info"
          format: "json"
          output: "stdout"

        healthcheck:
          enabled: true
          check_time: "08:00"
          timeout: 10s
        EOF

    - name: Deploy files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        source: "bin/${{ env.APP_NAME }},etc/config.yaml,deploy/notify.supervisor.conf"
        target: "${{ secrets.SERVER_TARGET }}"
        strip_components: 0

    - name: Setup service
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        script: |
          # 准备目录和文件
          sudo mkdir -p /var/logs
          sudo touch /var/logs/notify.log
          sudo chown ${{ secrets.SERVER_USERNAME }}:${{ secrets.SERVER_USERNAME }} /var/logs/notify.log
          sudo chmod 644 /var/logs/notify.log
          
          # 替换 supervisor 配置中的变量
          sudo sed -i "s|\$SERVER_TARGET|${{ secrets.SERVER_TARGET }}|g" ${{ secrets.SERVER_TARGET }}/deploy/notify.supervisor.conf
          sudo sed -i "s|\$SERVER_USERNAME|${{ secrets.SERVER_USERNAME }}|g" ${{ secrets.SERVER_TARGET }}/deploy/notify.supervisor.conf
          
          # 移动配置文件到正确位置
          sudo mv ${{ secrets.SERVER_TARGET }}/deploy/notify.supervisor.conf /etc/supervisor/conf.d/
          sudo rm -rf ${{ secrets.SERVER_TARGET }}/deploy
          
          # 停止服务（如果正在运行）
          sudo supervisorctl stop notify || true
          
          # 重新加载 supervisor 配置
          sudo supervisorctl reread
          sudo supervisorctl update
          
          # 启动服务
          sudo supervisorctl start notify
          
          # 查看服务状态
          sudo supervisorctl status notify